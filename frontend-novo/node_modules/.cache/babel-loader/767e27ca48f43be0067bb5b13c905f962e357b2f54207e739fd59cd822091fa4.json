{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juh\\\\OneDrive\\\\Documentos\\\\Estacionamento-App\\\\frontend-novo\\\\src\\\\components\\\\RegisterVehicle.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './RegisterVehicle.css'; // Importando o CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterVehicle() {\n  _s();\n  const [plate, setPlate] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messageType, setMessageType] = useState(\"\");\n  const clearFields = () => {\n    setPlate(\"\");\n    setOwner(\"\");\n    setModel(\"\");\n    setColor(\"\");\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    const plateRegex = /^[A-Z]{3}-[0-9][A-Z][0-9]{2}$/;\n    if (!plateRegex.test(plate)) {\n      setMessage(\"O formato da placa deve ser AAA-0A00.\");\n      setMessageType(\"error\");\n      return;\n    }\n    if (!owner || !model || !color) {\n      setMessage(\"Todos os campos são obrigatórios.\");\n      setMessageType(\"error\");\n      return;\n    }\n    try {\n      // Verificar se o veículo já está registrado\n      const checkResponse = await axios.get(`http://127.0.0.1:5001/api/check_vehicle/${plate}`);\n\n      // A resposta deve conter um booleano 'exists'\n      if (checkResponse.data && checkResponse.data.exists) {\n        setMessage(\"Esse veículo já está registrado no estacionamento.\");\n        setMessageType(\"error\");\n        return;\n      }\n\n      // Registrar o novo veículo\n      const response = await axios.post(\"http://127.0.0.1:5001/api/register_vehicle\", {\n        plate,\n        owner,\n        model,\n        color,\n        entry_time: new Date().toLocaleString()\n      });\n      setMessage(response.data.message);\n      setMessageType(\"success\");\n      clearFields(); // Limpa os campos após o registro bem-sucedido\n    } catch (error) {\n      // Diferenciar o erro de verificação de veículo do erro de registro\n      if (error.response && error.response.status === 404) {\n        setMessage(\"Erro ao verificar a existência do veículo.\");\n      } else {\n        console.error(\"Erro ao registrar veículo:\", error);\n        setMessage(\"Erro ao registrar veículo.\");\n      }\n      setMessageType(\"error\");\n    }\n  };\n  const handlePlateChange = e => {\n    const inputValue = e.target.value.toUpperCase(); // Converter para maiúsculas\n    let formattedValue = inputValue.replace(/[^A-Z0-9]/g, \"\"); // Remover caracteres inválidos\n\n    // Inserir o hífen no quarto caractere se o comprimento for maior que 3\n    if (formattedValue.length > 3) {\n      formattedValue = formattedValue.slice(0, 3) + \"-\" + formattedValue.slice(3);\n    }\n\n    // Limitar o comprimento total a 7 (incluindo o hífen)\n    if (formattedValue.length <= 8) {\n      setPlate(formattedValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-vehicle\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"REGISTRAR VE\\xCDCULO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Placa (AAA-0A00)\",\n        value: plate,\n        onChange: handlePlateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Propriet\\xE1rio\",\n        value: owner,\n        onChange: e => setOwner(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Modelo\",\n        value: model,\n        onChange: e => setModel(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Cor\",\n        value: color,\n        onChange: e => setColor(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterVehicle, \"rgyRERF9BNLVIMDfPoRNpoGcx2U=\");\n_c = RegisterVehicle;\nexport default RegisterVehicle;\nvar _c;\n$RefreshReg$(_c, \"RegisterVehicle\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterVehicle","_s","plate","setPlate","owner","setOwner","model","setModel","color","setColor","message","setMessage","messageType","setMessageType","clearFields","handleRegister","e","preventDefault","plateRegex","test","checkResponse","get","data","exists","response","post","entry_time","Date","toLocaleString","error","status","console","handlePlateChange","inputValue","target","value","toUpperCase","formattedValue","replace","length","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Juh/OneDrive/Documentos/Estacionamento-App/frontend-novo/src/components/RegisterVehicle.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './RegisterVehicle.css'; // Importando o CSS\r\n\r\nfunction RegisterVehicle() {\r\n  const [plate, setPlate] = useState(\"\");\r\n  const [owner, setOwner] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageType, setMessageType] = useState(\"\");\r\n\r\n  const clearFields = () => {\r\n    setPlate(\"\");\r\n    setOwner(\"\");\r\n    setModel(\"\");\r\n    setColor(\"\");\r\n  };\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const plateRegex = /^[A-Z]{3}-[0-9][A-Z][0-9]{2}$/;\r\n    if (!plateRegex.test(plate)) {\r\n      setMessage(\"O formato da placa deve ser AAA-0A00.\");\r\n      setMessageType(\"error\");\r\n      return;\r\n    }\r\n\r\n    if (!owner || !model || !color) {\r\n      setMessage(\"Todos os campos são obrigatórios.\");\r\n      setMessageType(\"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Verificar se o veículo já está registrado\r\n      const checkResponse = await axios.get(`http://127.0.0.1:5001/api/check_vehicle/${plate}`);\r\n      \r\n      // A resposta deve conter um booleano 'exists'\r\n      if (checkResponse.data && checkResponse.data.exists) {\r\n        setMessage(\"Esse veículo já está registrado no estacionamento.\");\r\n        setMessageType(\"error\");\r\n        return;\r\n      }\r\n      \r\n      // Registrar o novo veículo\r\n      const response = await axios.post(\"http://127.0.0.1:5001/api/register_vehicle\", {\r\n        plate,\r\n        owner,\r\n        model,\r\n        color,\r\n        entry_time: new Date().toLocaleString(),\r\n      });\r\n\r\n      setMessage(response.data.message);\r\n      setMessageType(\"success\");\r\n      clearFields(); // Limpa os campos após o registro bem-sucedido\r\n    } catch (error) {\r\n      // Diferenciar o erro de verificação de veículo do erro de registro\r\n      if (error.response && error.response.status === 404) {\r\n        setMessage(\"Erro ao verificar a existência do veículo.\");\r\n      } else {\r\n        console.error(\"Erro ao registrar veículo:\", error);\r\n        setMessage(\"Erro ao registrar veículo.\");\r\n      }\r\n      setMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  const handlePlateChange = (e) => {\r\n    const inputValue = e.target.value.toUpperCase(); // Converter para maiúsculas\r\n    let formattedValue = inputValue.replace(/[^A-Z0-9]/g, \"\"); // Remover caracteres inválidos\r\n\r\n    // Inserir o hífen no quarto caractere se o comprimento for maior que 3\r\n    if (formattedValue.length > 3) {\r\n      formattedValue = formattedValue.slice(0, 3) + \"-\" + formattedValue.slice(3);\r\n    }\r\n\r\n    // Limitar o comprimento total a 7 (incluindo o hífen)\r\n    if (formattedValue.length <= 8) {\r\n      setPlate(formattedValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-vehicle\">\r\n      <h2>REGISTRAR VEÍCULO</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Placa (AAA-0A00)\" \r\n          value={plate} \r\n          onChange={handlePlateChange} \r\n          required \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Proprietário\" \r\n          value={owner} \r\n          onChange={(e) => setOwner(e.target.value)} \r\n          required \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Modelo\" \r\n          value={model} \r\n          onChange={(e) => setModel(e.target.value)} \r\n          required \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Cor\" \r\n          value={color} \r\n          onChange={(e) => setColor(e.target.value)} \r\n          required \r\n        />\r\n        <button type=\"submit\">Registrar</button>\r\n      </form>\r\n      {message && <p className={`message ${messageType}`}>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterVehicle;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}